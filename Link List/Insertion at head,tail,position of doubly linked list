#include <iostream>
using namespace std;
class node
{public:
    int data;
    node *next;
    node *prev;
};
void display(class node*head);
class node* insert_head(int d,  class node *head);
void insert_tail(int d,  class node *head);

class node* insert_position(int d, class node *head,int position);

int main() {
	// your code goes here
	int n,i;
	cout<<"enter number of nodes"<<"\n";
	cin>>n;
	class node*head;
	class node*temp;
	head= NULL;
	for(i=0;i<n;i++)
    {
         class node *cur;

        if (head == NULL)
        {
            temp=new node();
            int p;
            cout<<"enter head data";
            cin>>temp->data;

            head = temp;
            cur=temp;
            temp->next=NULL;
            temp->prev=NULL;

        }



    else
        {
            temp=new node();
            int p;
            cout<<"enter node data"<<"\n";
            cin>>p;
            temp->data =p;
            cur->next=temp;
            temp->next = NULL;
            temp->prev = cur;
            cur = cur->next;
        }
    }
    while(1)
    {
int ch,d;

   cout<<"enter choice";
   cout<<"1 for head insertion"<<"\n";
   cout<<"2 for display"<<"\n";
    cout<<"3 for tail insertion"<<"\n";
    cout<<"4 for position insertion"<<"\n";
   cin>>ch;
   switch(ch)
   {


   case 1:cout<<"enter new head node data";
          cin>>d;
          head = insert_head( d,head);
          break;

   case 2:display(head);
        break;
  case 3:cout<<"enter tail node data";
          cin>>d;
         insert_tail( d,head);
         break;
  case 4:
     int position;
          cout<<"enter position";
          cin>>position;
        cout<<"enter new  node data";
          cin>>d;
          head = insert_position( d,head,position);
          break;
  default :cout<<"enter valid statement";
  break;
   }
    }






	return 0;
}
class node* insert_head(int d,  class node *head)
{
     class node *temp;
     temp=new node();
     temp->data = d;
     temp->next =head;
     head->prev=temp;
     temp->prev=NULL;
     head = temp;
     return head;
}
void display(class node*head)
{
    class node *temp;
    temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"\t";
        temp=temp->next;
    }
}
void insert_tail(int d, node *head)
{
    node *temp=new node();
    temp->data = d;
    temp->next = NULL;
    node*curr;
    curr = head;
    while (curr->next!=NULL)
    {
        curr=curr->next;
    }
    curr->next = temp;
    temp->prev = curr;




}
class node* insert_position(int d, class node *head,int position)
{
    node *temp=new node();
    temp->data = d;
    temp->next = NULL;
    temp->prev = NULL;
    int i;
     node *cur;

     if (position==1)
     {
          temp->next = head;
          temp->prev = NULL;
   head = temp;
   return temp;
     }
     else
     {
         cur=head;


 for (i=1;i<position-1;i++)
 {
     cur=cur->next;
 }

 temp->next = cur->next;
 temp->prev = cur;
 cur->next->prev=temp;
 cur->next=temp;
 return head;
     }




}
